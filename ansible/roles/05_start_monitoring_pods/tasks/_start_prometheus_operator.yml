- name: get helm release list
  command: |
    helm list --namespace monitoring -o json
  register: helm_release_list_result

- name: generate tempfile
  tempfile:
    state: file
    suffix: values.yaml
  register: prometheus_operator_values_tempfile
  when: helm_release_list_result.stdout | from_json | json_query('[?name==`po`]') | length == 0

- name: write generated values.yaml to tempfile
  template:
    src: "{{ root_dir }}/monitoring/prometheus-operator-{{ ansible_play_name }}.yaml.j2"
    dest: "{{ prometheus_operator_values_tempfile.path }}"
  when: helm_release_list_result.stdout | from_json | json_query('[?name==`po`]') | length == 0

- name: start prometheus-operator using heml
  command: |
    helm install --name-template po --namespace monitoring -f {{ prometheus_operator_values_tempfile.path }} stable/prometheus-operator
  register: prometheus_operator_result
  when: helm_release_list_result.stdout | from_json | json_query('[?name==`po`]') | length == 0
- debug: var=prometheus_operator_result.stdout_lines
  when: helm_release_list_result.stdout | from_json | json_query('[?name==`po`]') | length == 0

- name: check prometheus-operator services
  k8s_info:
    kind: Service
    name: "{{ item }}"
    namespace: monitoring
    label_selectors:
      - release = po
  register: po_service_result
  until: po_service_result.resources | length == 1
  retries: 6
  delay: 10
  with_items:
    - "po-grafana"
    - "po-prometheus-node-exporter"
    - "po-prometheus-operator-alertmanager"
    - "po-prometheus-operator-operator"
    - "po-prometheus-operator-prometheus"

- name: check prometheus-operator daemonset
  k8s_info:
    kind: DaemonSet
    name: "{{ item }}"
    namespace: monitoring
    label_selectors:
      - release = po
  register: po_daemonset_result
  until:
    - po_daemonset_result.resources | length == 1
    - po_daemonset_result.resources[0].status is defined
    - po_daemonset_result.resources[0].status.numberAvailable is defined
    - po_daemonset_result.resources[0].status.numberAvailable == 1
    - po_daemonset_result.resources[0].status.numberReady is defined
    - po_daemonset_result.resources[0].status.numberReady == 1
  retries: 60
  delay: 10
  with_items:
    - "po-prometheus-node-exporter"

- name: check prometheus-operator statefulset
  k8s_info:
    kind: StatefulSet
    name: "{{ item }}"
    namespace: monitoring
    label_selectors:
      - release = po
  register: po_statefulset_result
  until:
    - po_statefulset_result.resources | length == 1
    - po_statefulset_result.resources[0].status is defined
    - po_statefulset_result.resources[0].status.readyReplicas is defined
    - po_statefulset_result.resources[0].status.readyReplicas == 1
  retries: 60
  delay: 10
  with_items:
    - "alertmanager-po-prometheus-operator-alertmanager"
    - "prometheus-po-prometheus-operator-prometheus"

- name: check prometheus-operator deployment
  k8s_info:
    kind: Deployment
    name: "{{ item }}"
    namespace: monitoring
    label_selectors:
      - release = po
  register: po_deployment_result
  until:
    - po_deployment_result.resources | length == 1
    - po_deployment_result.resources[0].status is defined
    - po_deployment_result.resources[0].status.readyReplicas is defined
    - po_deployment_result.resources[0].status.readyReplicas == 1
  retries: 60
  delay: 10
  with_items:
    - "po-grafana"
    - "po-prometheus-operator-operator"
