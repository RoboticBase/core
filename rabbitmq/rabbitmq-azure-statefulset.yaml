apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
data:
  enabled_plugins: |
      [rabbitmq_management,rabbitmq_peer_discovery_k8s,rabbitmq_mqtt].
  rabbitmq.conf: |
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
      cluster_formation.k8s.address_type = hostname
      cluster_formation.k8s.hostname_suffix = rabbitmq.default.svc.cluster.local
      cluster_formation.k8s.service_name = rabbitmq
      cluster_formation.node_cleanup.interval = 30
      cluster_formation.node_cleanup.only_log_warning = true
      cluster_partition_handling = autoheal
      queue_master_locator=min-masters
      loopback_users.guest = false
      mqtt.allow_anonymous = false
      mqtt.vhost = /
      mqtt.exchange = iota-exchange
      mqtt.subscription_ttl = 86400000
      mqtt.prefetch = 10
      mqtt.tcp_listen_options.backlog = 128
      mqtt.tcp_listen_options.nodelay = true
      mqtt.listeners.tcp.default = 1883
      mqtt.listeners.ssl.default = 8883
      ssl_options.cacertfile = /etc/ssl/certs/fullchain.pem
      ssl_options.certfile = /etc/ssl/certs/cert.pem
      ssl_options.keyfile = /etc/ssl/certs/privkey.pem
      ssl_options.verify = verify_peer
      ssl_options.fail_if_no_peer_cert = false
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
spec:
  serviceName: rabbitmq
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      containers:
      - name: rabbitmq-k8s
        image: rabbitmq:3.7
        volumeMounts:
          - name: config-volume
            mountPath: /etc/rabbitmq
          - name: certifications-volume
            mountPath: /etc/ssl/certs
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
          - name: mqtt
            protocol: TCP
            containerPort: 1883
          - name: mqtts
            protocol: TCP
            containerPort: 8883
        livenessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        imagePullPolicy: Always
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: K8S_HOSTNAME_SUFFIX
            value: ".rabbitmq.default.svc.cluster.local"
          - name: K8S_SERVICE_NAME
            value: "rabbitmq"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_NAME)$(K8S_HOSTNAME_SUFFIX)"
          - name: RABBITMQ_ERLANG_COOKIE
            value: "rabbitmqcookie"
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
        - name: certifications-volume
          secret:
            secretName: rabbitmq-certifications
